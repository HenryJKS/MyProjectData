-- Criando uma procedure para atulizar os clientes, 
-- Atualizando a Razão Social, CNPJ e Faturamento Previsto
-- Fizemos outra atualizações para estudar


create or replace PROCEDURE ATUALIZA_CLIENTE_CURSOR
IS
v_CATEGORIA CLIENTE.CATEGORIA%TYPE;
v_CONTACLIENTE INTEGER;
v_FATURAMENTO CLIENTE.FATURAMENTO_PREVISTO%TYPE;
v_CNPJ CLIENTE.CNPJ%TYPE;
v_CNPJ_SAIDA CLIENTE.CNPJ%TYPE;
v_ID CLIENTE.ID%TYPE;
v_RAZAO CLIENTE.RAZAO_SOCIAL%TYPE;
v_CNPJ_LENGTH INTEGER;
v_CNPJ_LENGTH_MAIOR INTEGER;
v_RAND INTEGER;
BEGIN
    FOR C IN (SELECT ID, RAZAO_SOCIAL, CNPJ, FATURAMENTO_PREVISTO FROM CLIENTE ORDER BY 1) LOOP
        v_ID := C.ID;
        v_CNPJ := c.CNPJ;
        v_FATURAMENTO := c.FATURAMENTO_PREVISTO;
        v_RAZAO := c.RAZAO_SOCIAL;

        SELECT UPPER(RAZAO_SOCIAL) INTO v_RAZAO FROM CLIENTE WHERE ID = v_ID;
        UPDATE CLIENTE SET RAZAO_SOCIAL = v_RAZAO WHERE ID = v_ID;

        SELECT CATEGORIA_CLIENTE(v_FATURAMENTO) INTO v_CATEGORIA FROM CLIENTE WHERE ID = v_ID;
        UPDATE CLIENTE SET CATEGORIA = v_CATEGORIA WHERE ID = v_ID;
        
        SELECT LENGTH(TRIM(CNPJ)) INTO v_CNPJ_LENGTH FROM CLIENTE WHERE ID = v_ID;    
        WHILE v_CNPJ_LENGTH < 11 LOOP
            SELECT TO_CHAR(FLOOR(DBMS_RANDOM.VALUE(0, 9))) INTO v_RAND FROM DUAL;
            UPDATE CLIENTE SET CNPJ = (SELECT CNPJ || V_RAND FROM CLIENTE WHERE ID = v_ID) WHERE ID = v_ID;
            v_CNPJ_LENGTH := v_CNPJ_LENGTH + 1;
        END LOOP;
        
        SELECT REGEXP_REPLACE(CNPJ, '[^0-9]', '') INTO v_CNPJ FROM CLIENTE WHERE ID = v_ID;    
        FORMATACAO_CNPJ(v_CNPJ, v_CNPJ_SAIDA);
        UPDATE CLIENTE SET CNPJ = v_CNPJ_SAIDA WHERE ID = v_ID;
        
        SELECT LENGTH(TRIM(CNPJ)) INTO v_CNPJ_LENGTH_MAIOR FROM CLIENTE WHERE ID = v_ID;
        IF v_CNPJ_LENGTH_MAIOR > 13 THEN
            UPDATE CLIENTE SET CNPJ = (SELECT SUBSTR(CNPJ, 1, 13) FROM CLIENTE WHERE ID = v_ID) WHERE ID = v_ID;
        END IF;
    END LOOP;
END;